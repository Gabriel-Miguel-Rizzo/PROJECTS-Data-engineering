create or replace procedure p_dplan_identif_inconsistencia is

  v_qtde_dim_empresa_crd integer;
  v_qtde_dim_projeto_crd integer;
  v_qtde_fato_crd        integer;
  v_qtde_distinct_crd    integer;
  v_descricao_problema   t_dplan_identif_inconsistencia.ds_inconsist%type;
  v_dados_problema       t_dplan_identif_inconsistencia.dados_inconsist%type;

  -- para enviar email
  v_assunto_email   varchar2(200);
  v_mensagem_email  clob; --varchar2(1000);
  v_nome_destinario varchar2(100);
  v_remetente       varchar2(100);
  v_destinatario    varchar2(100);
  cn                utl_smtp.connection;
  --  mensagem CLOB;
  v_num_ocorr integer;

begin

  -- inconsistencias a serem verificadas

  -- Passo (0) - limpar a base caso o processo rode mais de uma vez num mesmo dia

  delete from T_DPLAN_IDENTIF_INCONSISTENCIA t
   where t.dt_inconsist = f_dplan_binovo_get_dia_utl_ant(trunc(sysdate));

  --************** (1) - valor liberado para o INOVACRED (ERP x Sistema INOVACRED)

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'INOVACRED' sistema,
           'Inconsistência' tipo_problema,
           'Liberação' processo,
           'Valor liberado aos beneficiários no exercicio não corresponde ao valor liberado aos agentes' descricao_problema,
           'Refe: ' || t.ref || ' ; Data da Liberação : ' ||
           to_char(t.dtliberacao, 'dd/mm/yyyy') || ' ; valor esperado = ' ||
           nvl(valor_ics, 0) || ' ; valor encontrado: ' ||
           nvl(valor_bes, 0) || '; Diferença:' ||
           (nvl(valor_ics,0) - nvl(valor_bes,0)) dados_problema,
           'Ricardo Luiz' responsavel,
           'rluiz@finep.gov.br' email_responsavel
--           'Gustavo Barcelos' responsavel, sandro 21/03/2022
--           'gbarcelos@finep.gov.br' email_responsavel
      from (select A.REF,
                   a.dtliberacao,
                   sum(a.vlliberacao) valor_ics,
                   valor_bes
              from dagi_credito_liberacoes_ano a
              left join (
                        -- pode ocorrer mis de uma liberação por projeto num mesmo dia
                        --select 'IC' || substr(cr.codigo, 9, 2) || '/' || substr(cr.codigo, 4, 2) as ref,
                        select calcula_ref_inovacred (cr.codigo) as ref, -- sandro 03/03/2023
                                trunc(pc.dataliberacao) dtliberacao,
                                sum(pc.valor) valor_bes
                        
                          from inovacred_owner.agente a
                        
                         inner join uf
                            on uf.sguf = a.uf
                        
                         inner join regiao re
                            on re.cdregiao = uf.cdregiao
                        
                         inner join inovacred_owner.credenciamento cr
                            on a.id = cr.agente_id
                        
                         inner join inovacred_owner.cartadedisponibilizacao cd1
                            on cd1.credenciamento_id = cr.id
                        
                         inner join inovacred_owner.operacao o
                            on o.cartadedisponibilizacao_id = cd1.id
                        
                         inner join inovacred_owner.operacaofinanceira fi
                            on o.operacaofinanceira_id = fi.id
                        
                         inner join inovacred_owner.beneficiario be
                            on be.id = o.beneficiario_id
                        
                          left join inovacred_owner.empresa em
                            on em.cnpj = be.cnpj
                        
                         inner join inovacred_owner.parcela pc
                            on fi.id = pc.operacaofinanceira_id
                        
                         where cr.status = 'A'
                           and o.status = 'AT'
                           and pc.dataliberacao is not null
                        
                         group by --'IC' || substr(cr.codigo, 9, 2) || '/' || substr(cr.codigo, 4, 2),
                                   calcula_ref_inovacred(cr.codigo), -- sandro 03/03/2023
                                   pc.dataliberacao) be
                on be.ref = a.ref
               and be.dtliberacao = a.dtliberacao
            
             where a.ref like 'IC%'
            
             group by a.ref, a.dtliberacao, valor_bes) t
     where nvl(t.valor_ics,0) <> nvl(valor_bes,0)
       and t.dtliberacao > '01/01/2020';

  --************** (2) - Check dos dados do Finep Credito oriundos do OrientDB 

  -- Comparar o nº de linhas das tabelas t_dplan_binovo_dim_empresa_crd, 
  -- t_dplan_binovo_dim_projeto_crd e t_dplan_binovo_fato_inov_crd

  select count(distinct qtde) num_distintos
    into v_qtde_distinct_crd
    from (select 'empresa' tabela, count(*) qtde
            from t_dplan_binovo_dim_empresa_crd
          union
          select 'projeto', count(*)
            from t_dplan_binovo_dim_projeto_crd
          union
          select 'fato', count(*) from t_dplan_binovo_fato_inov_crd);

  -- ser o resultado for maior que um as tabelas 
  -- estão com numero diferente de registros
  if v_qtde_distinct_crd > 1 then
    begin
      select count(*) qtde
        into v_qtde_dim_empresa_crd
        from t_dplan_binovo_dim_empresa_crd;
    
      select count(*) qtde
        into v_qtde_dim_projeto_crd
        from t_dplan_binovo_dim_projeto_crd;
    
      select count(*) qtde
        into v_qtde_fato_crd
        from t_dplan_binovo_fato_inov_crd;
    
      v_descricao_problema := 'Número de registros nas tabelas carregadas do Finep Crédito não batem';
      v_dados_problema     := 'Qtde na Tabela Fato: ' || v_qtde_fato_crd || '; ';
      v_dados_problema     := v_dados_problema ||
                              'Qtde na Dimensão Empresa: ' ||
                              v_qtde_dim_empresa_crd || '; ';
      v_dados_problema     := v_dados_problema ||
                              'Qtde na Dimensão Projeto: ' ||
                              v_qtde_dim_projeto_crd;
    
      insert into t_dplan_identif_inconsistencia
        (dt_inconsist,
         nm_sistema_inconsist,
         tp_inconsist,
         proc_inconsist,
         ds_inconsist,
         dados_inconsist,
         nmresp_ajuste,
         emresp_ajuste)
      values
        (f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)),
         'Finep Crédito',
         'Inconsistência',
         'Cadastro',
         v_descricao_problema,
         v_dados_problema,
         'Geilson Fonte',
         'gsfonte@finep.gov.br');
    end;
  end if;

  --************** (3) - Ultima liberação registrada excedeu 2 semanas após a ultima liberação. 
  -- Checar se houve carga

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'ERP' sistema,
           'Aviso' tipo_problema,
           'Liberação' processo,
           'Ultima liberação registrada excedeu 2 semanas. Checar se houve algum erro carga dos vouchers' descricao_problema,
           'Data da ultima liberação: ' ||
           to_char(dtultimalib, 'dd/mm/yyyy') dados_problema,
           'Diego Cabral',
           'dcabral@finep.gov.br'
      from (select max(lib.dtliberacao) dtultimalib,
                   f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) - 14 dtCheck
              from dagi_credito_liberacoes_ano lib) b
     where dtultimalib < dtCheck;

  --************** (4) - Projeto Contratado sem Data de Assinatura no Finep Crédito

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Projeto Codificado sem Data de Assinatura no Finep Crédito',
           'Referencia : ' || refe || '; Data da codificação: ' ||
           to_char(dtCodificacao, 'dd/mm/yyyy'),
           'Geilson Fonte',
           'gsfonte@finep.gov.br'
      from (select a.ref refe, v.DT_FIM dtCodificacao
              from t_dplan_binovo_dim_projeto_crd a
             inner join v_dplan_binovo_atividades_fc v
                on v.REFE = a.ref
             where v.ATIVIDADE = 'Codificação do Contrato'
               and v.STATUS = 'Finalizada'
               and a.dtassinatura = '01/01/1900'
               and a.status = 'Em contratação') b;

  --************** (5) - Projeto que passou na RD1 sem data de RD1 no Finep Crédito

  -- projetos sem data de RD1 mas como a atividade 'Decisão de Diretoria' finalizada

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Projeto que passou na 1ª RD sem Data de RD1 no Finep Crédito',
           'Referencia : ' || refe ||
           '; Data Fim da Atividade "Decisão de Diretoria" do processo "Análise do Projeto": ' ||
           to_char(DT_FIM, 'dd/mm/yyyy'),
           'Geilson Fonte',
           'gsfonte@finep.gov.br'
      from (
            --select a.ref refe, a.data_cpsf , a.data_cep , v.DT_FIM, a.status
            select a.ref refe, v.DT_FIM
              from t_dplan_binovo_dim_projeto_crd a
             inner join v_dplan_binovo_atividades_fc v
                on v.REFE = a.ref
             where v.ATIVIDADE = 'Decisão de Diretoria'
               and v.PROCESSO = 'Análise do Projeto'
               and v.STATUS = 'Finalizada'
               and a.DATA_RD1 = '01/01/1900') b;

  --************** (6) - Projeto que passou na RD2 sem data de RD2 no Finep Crédito

  -- projetos sem data de RD2 mas como a atividade 'Decisão de Diretoria' finalizada

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Projeto que passou na 2ª RD sem Data de RD2 no Finep Crédito',
           'Referencia : ' || refe ||
           '; Data Fim da Atividade "Decisão de Diretoria" do processo "Análise Jurídica": ' ||
           to_char(DT_FIM, 'dd/mm/yyyy'),
           'Geilson Fonte',
           'gsfonte@finep.gov.br'
      from (
            --select a.ref refe, a.data_cpsf , a.data_cep , v.DT_FIM, a.status
            select a.ref refe, v.DT_FIM
              from t_dplan_binovo_dim_projeto_crd a
             inner join v_dplan_binovo_atividades_fc v
                on v.REFE = a.ref
             where v.ATIVIDADE = 'Decisão de Diretoria'
               and v.PROCESSO = 'Análise Jurídica e de Garantias'
               and v.STATUS = 'Finalizada'
               and a.DATA_RD2 = '01/01/1900') b;

  --************** (7) - Projeto que passou na RD1 sem data de RD1 no Finep Crédito

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Projeto que passou na 1ª RD mas status está inconsistente',
           'Referencia : ' || refe ||
           '; Data RD1 : ' || to_char(DATA_RD1, 'dd/mm/yyyy') ||
           '; Status : '   || STATUS,
           'Geilson Fonte',
           'gsfonte@finep.gov.br'
      from (
          select T.REF refe, T.DATA_RD1, T.STATUS --, 'ANALISE MERITO' problema
          from T_DPLAN_BINOVO_GR_DIM_PROJ_CRD t 
          WHERE T.DATA_RD1 > '01/01/1900' 
          AND T.STATUS not in ( 'Indeferido','Em análise (jurídico e garantias)',
                              'Em contratação','Aguardando registro','Em execução','Cancelado'
          ,'Aguardando quitação do financiamento') -- sandro 17/01/2022
          );
          
  --****6********** (8) - Projeto que passou na RD2 sem data de RD2 no Finep Crédito          
  
  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Projeto que passou na 2ª RD mas status está inconsistente',
           'Referencia : ' || refe ||
           '; Data RD1 : ' || to_char(DATA_RD2, 'dd/mm/yyyy') ||
           '; Status : '   || STATUS,
           'Geilson Fonte',
           'gsfonte@finep.gov.br'
      from (
          select T.REF REFE, T.DATA_RD2, T.STATUS--, 'ANALISE JURIDICA' problema
          from T_DPLAN_BINOVO_GR_DIM_PROJ_CRD t 
          WHERE T.DATA_RD2 > '01/01/1900' 
          AND T.STATUS not in ('Indeferido','Em contratação','Aguardando registro','Em execução','Cancelado'
         ,'Aguardando quitação do financiamento') -- sandro 17/01/2022
          );

  --************** (9) - Projeto codificado sem data de assinatura no Finep Crédito
  
  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Projeto codificado mas status está inconsistente',
           'Referencia : ' || refe ||
           '; Data RD1 : ' || to_char(DATA_RD2, 'dd/mm/yyyy') ||
           '; Status : '   || STATUS,
           'Geilson Fonte',
           'gsfonte@finep.gov.br'
      from (
          select T.REF REFE, T.DATA_RD2, T.STATUS--, 'ANALISE JURIDICA' problema
          from T_DPLAN_BINOVO_GR_DIM_PROJ_CRD t 
          WHERE T.Dtassinatura > '01/01/1900' 
          AND T.STATUS not in ('Aguardando registro','Em execução','Cancelado'
          ,'Aguardando quitação do financiamento') -- sandro 17/01/2022
          );

  --************** (10) - Identificar novas fontes de recursos para o não reembolsável
  --                      Para cadastrar seu respectivo fundo
  -- 04/10/2021

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Intranet',
           'Inconsistência',
           'Cadastro',
           'Nova fonte de recurso para o não reembolsável criado. Favor providenciar a identificação do respectivo fundo.',
           'Fonte : ' || nova_fonte ,
           'Sandro Souza',
           'sandros@finep.gov.br'
      from (
            SELECT distinct v.fonte nova_fonte
            from analise.v_orcamento_projeto v
            where not exists ( select 1 
                               from t_dplan_binovo_ass_fonte_fundo ta 
                               where ta.ds_fonte = v.fonte)
          );


  --************** (11) - Identificar novas linhas no Inovacred para cadastrar no BI
  -- 30/11/2021

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Inovacred',
           'Inconsistência',
           'Cadastro',
           'Nova linha de inovacred criada. Favor providenciar o cadastro no BI.',
           'Linha : ' || linha ,
           'Sandro Souza',
           'sandros@finep.gov.br'
      from (
              select distinct o.linha
              from inovacred_owner.operacao o 
              where not exists
                   (select 1
                       from t_dplan_binovo_linha_inovacred li
                       where li.sigla_linha = o.linha
                   )
          );


  --************** (12) - Associar produto a novas demandas do não reembolsável 
  --                     para o Painel de Gestão de Produtos (CONTRATADOS)
  -- 30/11/2021

-- ATENÇÃO : utilizar a função p_dplan_bi_insere_dem_prod(575,'SUBVENÇÃO DIRETA - CHAMADAS TEMÁTICAS') para inserir a nova demanda
  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Intranet',
           'Inconsistência',
           'Cadastro',
           'Projeto contratado para uma demanda da Intranet ou SISGON sem produto associado. Favor informar a equipe de dados. Seguem dois exemplos de projeto: ' || proj_exemplo,
           'Demanda : ' || demanda,
           'Sandro Souza',
           'sandros@finep.gov.br'

      from (
              select d.iddemanda || ' - ' || d.nmdemanda demanda , concatena_ref_contrat_demanda(d.iddemanda, 2) proj_exemplo
              from demanda d
              where not exists ( select 1 
                                 from t_dplan_binovo_gtpr_dem_prod dp 
                                 where dp.iddemanda = d.iddemanda)
              and exists (select 1 
                          from dagi_relatorio_fundos drf 
                          where drf.iddemanda = d.iddemanda
                          and drf.dtassinatura > '01/01/2018')

/*
          union
          
          -- SISGON
          select distinct 'SISGON' || ' - ' || sd.iddemanda || ' - ' || sd.nomecurto demanda , concatena_ref_contrat_demanda(sd.iddemanda, 2) proj_exemplo

          from t_sisgon_demanda sd

          where not exists ( select 1 
                             from t_dplan_binovo_gtpr_dem_prod dp 
                             where dp.iddemanda = sd.iddemanda)

          and exists (select 1
          
                      from t_sisgon_projeto sp

                      inner join t_sisgon_demanda sd1
                      on sd1.iddemanda = sp.iddemanda

                      where sp.dtassinatura is not null
                      and sd1.iddemanda = sd.iddemanda
                      
                      )
*/

          );

  --************** (12) - Associar produto a novas demandas do não reembolsável 
  --                     para o Painel de Gestão de Produtos (APROVADOS)
  -- 30/11/2021

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Intranet',
           'Inconsistência',
           'Cadastro',
           'Projeto APROVADO para uma demanda da Intranet ou SISGON sem produto associado. Favor informar a equipe de dados. Seguem dois exemplos de projeto: ' || proj_exemplo,
           'Demanda : ' || demanda,
           'Vivian Cunha',
           'vcpires@finep.gov.br'
      from (
          select 'Intranet' || ' - ' || d.iddemanda || ' - ' || d.nmdemanda demanda , concatena_ref_contrat_demanda(d.iddemanda, 2) proj_exemplo
          from demanda d
          where not exists ( select 1 
                             from t_dplan_binovo_gtpr_dem_prod dp 
                             where dp.iddemanda = d.iddemanda)
          and exists (select 1

                      from projeto p

                      inner join demanda d1 
                      on d1.iddemanda = p.iddemanda

                      inner join comdir.projeto_reuniao pr
                        on  pr.cdprojeto = p.cdprojeto
                        and pr.nrversao = p.nrversao
                             and pr.cdparecer  in (1,12)
                             and pr.tpnrdecisao = 'D'
                      inner join comdir.reuniao r
                      on r.nrreuniao = pr.nrreuniao
                      and r.cdtiporeuniao = pr.cdtiporeuniao

                      where r.dtreuniao > '01/01/2018'
                      --and mp.modalidade in ('Não Reembolsável', 'Subvenção')
                      and d1.iddemanda <> 127
                      and d1.iddemanda = d.iddemanda
                      and analise.projeto_ativo (p.cdprojeto,p.nrversao) not in ('INDEFERIDO','ARQUIVADO')                                        
                      --group by d.iddemanda

                      )

          union
          
          -- SISGON
          select distinct 'SISGON' || ' - ' || sd.iddemanda || ' - ' || sd.nomecurto demanda , concatena_ref_contrat_demanda(sd.iddemanda, 2) proj_exemplo

          from t_sisgon_demanda sd

          where not exists ( select 1 
                             from t_dplan_binovo_gtpr_dem_prod dp 
                             where dp.iddemanda = sd.iddemanda)

          and exists (select 1
          
                      from t_sisgon_projeto sp

                      inner join t_sisgon_demanda sd1
                      on sd1.iddemanda = sp.iddemanda

                      where sp.datadeliberacaodir is not null
                      and sd1.iddemanda = sd.iddemanda
                      
                      )
          )
                 
          order by 6;



  -- ESPAÇO RESERVADO PARA A INCLUSÃO DE NOVOS CHECKS


  --************** (13) - Identificar novas linhas de Apoio Direto a Inovação
  
  -- 18/05/2022

  insert into t_dplan_identif_inconsistencia
    select f_dplan_binovo_get_dia_utl_ant(trunc(sysdate)) data_posicao,
           'Finep Crédito',
           'Inconsistência',
           'Cadastro',
           'Nova linha criada para o Apoio Direto à Inovação. Favor atualizar a tabela t_dplan_binovo_depara_produto.',
           'Linha : ' || linha,
           'Sandro Souza',
           'sandros@finep.gov.br'
      from (
              select  distinct f.linha
                from  t_dplan_binovo_fato_inov_crd f
                where not exists ( select 1 
                                   from t_dplan_binovo_depara_produto dpara 
                                   where upper(dpara.linha_de) = upper(f.linha))
            );
  
  


  -- temporário

  /*   update t_dplan_identif_inconsistencia a
  set a.nmresp_ajuste = 'Sandro Souza' --"Responsável pela verificação",
  , a.emresp_ajuste = 'sandros@finep.gov.br';*/

  commit;

  -- ******** envio de email das inconsistencias encontradas

  for c in (select a.dt_inconsist,
                   a.nm_sistema_inconsist,
                   a.tp_inconsist,
                   a.proc_inconsist,
                   a.ds_inconsist,
                   a.dados_inconsist,
                   a.nmresp_ajuste,
                   a.emresp_ajuste
              from t_dplan_identif_inconsistencia a
             where a.dt_inconsist =
                   f_dplan_binovo_get_dia_utl_ant(trunc(sysdate))) loop
    begin
    
      -- Cabeçalho
      v_remetente          := 'sandros@finep.gov.br';
      v_destinatario       := c.emresp_ajuste;
      v_nome_destinario    := c.nmresp_ajuste;
      v_descricao_problema := c.ds_inconsist;
      v_dados_problema     := c.dados_inconsist;
      v_assunto_email      := 'Mensagem automática Problema de inconsistência na base gerencial (SIGFS)';
    
      -- Mensagem
      v_mensagem_email := 'Prezado ' || v_nome_destinario || ',' ||
                          '<br><br>';
      v_mensagem_email := v_mensagem_email ||
                          'Identificamos a seguinte situação na base gerencial (SIGFS)' || ':' ||
                          '<br><br>';
      v_mensagem_email := v_mensagem_email || '"' || v_descricao_problema || '"' ||
                          '<br><br>';
      v_mensagem_email := v_mensagem_email || 'Informação adicional --> ' ||
                          v_dados_problema || '<br><br>';
      v_mensagem_email := v_mensagem_email ||
                          'Peço por gentileza a verificação' || '<br><br>';
      v_mensagem_email := v_mensagem_email || 'Att' || '<br><br>';
      v_mensagem_email := v_mensagem_email || 'DPLAN';
    
      --mensagem := 'O conteúdo da mensagem é: ' || p_mensagem;
      cn := utl_smtp.open_connection('xmail.finep.gov.br');
      utl_smtp.helo(cn, 'xmail.finep.gov.br');
      utl_smtp.mail(cn, v_remetente); --'<sigfs@finep.gov.br>');
      utl_smtp.rcpt(cn, v_destinatario); --'<sandros@finep.gov.br>');
      utl_smtp.rcpt(cn, '<sandros@finep.gov.br>');
      utl_smtp.open_data(cn);
      utl_smtp.write_data(cn, 'MIME-version: 1.0' || UTL_TCP.CRLF);
      utl_smtp.write_data(cn,
                          'Content-Type: text/html;charset=iso-8859-1' ||
                          UTL_TCP.CRLF);
      utl_smtp.write_data(cn,
                          'Content-Transfer-Encoding: quoted-printable ' ||
                          UTL_TCP.CRLF);
      --    utl_smtp.write_data(c, 'From: remetente@finep.gov.br' || utl_tcp.CRLF);
      --    utl_smtp.write_data(c, 'To: destinatario@finep.gov.br' || utl_tcp.CRLF);
      utl_smtp.write_data(cn, 'From: ' || v_remetente || utl_tcp.CRLF);
      utl_smtp.write_data(cn,
                          'To: ' || v_destinatario ||
                          ';sandros@finep.gov.br' || utl_tcp.CRLF);
      utl_smtp.write_data(cn,
                          'Content-Transfer-Encoding: 8bit' || UTL_TCP.CRLF);
      utl_smtp.write_data(cn, 'Subject: ' || v_assunto_email);
      --    utl_smtp.write_data(c, 'Subject: Relatório mensal ');
      utl_smtp.write_raw_data(cn,
                              UTL_RAW.CAST_TO_RAW(UTL_TCP.CRLF || ' ' ||
                                                  UTL_TCP.CRLF)); -- linha obrigatória
      --    utl_smtp.write_data(cn, v_mensagem_email); -- conteúdo
      utl_smtp.write_raw_data(cn,
                              UTL_RAW.CAST_TO_RAW(UTL_TCP.CRLF ||
                                                  v_mensagem_email ||
                                                  UTL_TCP.CRLF)); -- conteúdo
      utl_smtp.close_data(cn);
      utl_smtp.quit(cn);
    
    end;
  end loop;

  -- avisar ao responsável pela carga de gestão de produtos será poderá realizar ou não a carga de gestão de produtos (sandro 08/06/2022)


  -- detectar se houve algum novo produto, linha ou demanda  
  select count(*)
  into v_num_ocorr
  from t_dplan_identif_inconsistencia i
  where i.dt_inconsist = f_dplan_binovo_get_dia_utl_ant(trunc(sysdate))
  and i.ds_inconsist in ( 'Nova linha de inovacred criada. Favor providenciar o cadastro no BI.',
                          'Projeto contratado para uma demanda da Intranet sem produto associado. Favor informar a equipe de dados.',
                          'Nova linha criada para o Apoio Direto à Inovação. Favor atualizar a tabela t_dplan_binovo_depara_produto.'
  );  

  -- teste da ocorrencia
  if v_num_ocorr = 0 then 
    v_descricao_problema := 'Não foi detectada nenhuma necessidade de atualização na estrutura de Demanda, Produto e Instrumento. Proceda com a atualização do Painel de Gestão de Produtos';
  else 
    v_descricao_problema := 'Foi detectado a necessidade de atualização na estrutura de Demanda, Produto e Instrumento. Aguarde para proceder com a atualização do Painel de Gestão de Produtos';
  end if;

  -- enviar e-mail

  -- Cabeçalho
  v_remetente          := 'sandros@finep.gov.br';
  v_destinatario       := 'rizzo@finep.gov.br';
  v_nome_destinario    := 'Gabriel Rizzo';
--  v_descricao_problema := ds_inconsist;
  v_dados_problema     := '';
  v_assunto_email      := 'Mensagem automática - Atualização dos dados do Painel de Gestão de Produtos';
    
  -- Mensagem
  v_mensagem_email := 'Prezado ' || v_nome_destinario || ',' ||
                      '<br><br>';
  v_mensagem_email := v_mensagem_email ||
                      'Identificamos a seguinte situação' || ':' ||
                      '<br><br>';
  v_mensagem_email := v_mensagem_email || '"' || v_descricao_problema || '"' ||
                      '<br><br>';
  v_mensagem_email := v_mensagem_email || 'Informação adicional --> ' ||
                      v_dados_problema || '<br><br>';
  v_mensagem_email := v_mensagem_email ||
                      'Peço por gentileza a verificação' || '<br><br>';
  v_mensagem_email := v_mensagem_email || 'Att' || '<br><br>';
  v_mensagem_email := v_mensagem_email || 'DPLAN';
    
  
  cn := utl_smtp.open_connection('xmail.finep.gov.br');
  utl_smtp.helo(cn, 'xmail.finep.gov.br');
  utl_smtp.mail(cn, v_remetente); --'<sigfs@finep.gov.br>');
  utl_smtp.rcpt(cn, v_destinatario); --'<sandros@finep.gov.br>');
  utl_smtp.rcpt(cn, '<sandros@finep.gov.br>');
  utl_smtp.open_data(cn);
  utl_smtp.write_data(cn, 'MIME-version: 1.0' || UTL_TCP.CRLF);
  utl_smtp.write_data(cn,
                      'Content-Type: text/html;charset=iso-8859-1' ||
                      UTL_TCP.CRLF);
  utl_smtp.write_data(cn,
                      'Content-Transfer-Encoding: quoted-printable ' ||
                      UTL_TCP.CRLF);
  --    utl_smtp.write_data(c, 'From: remetente@finep.gov.br' || utl_tcp.CRLF);
  --    utl_smtp.write_data(c, 'To: destinatario@finep.gov.br' || utl_tcp.CRLF);
  utl_smtp.write_data(cn, 'From: ' || v_remetente || utl_tcp.CRLF);
  utl_smtp.write_data(cn,
                      'To: ' || v_destinatario ||
                      ';sandros@finep.gov.br' || utl_tcp.CRLF);
  utl_smtp.write_data(cn,
                      'Content-Transfer-Encoding: 8bit' || UTL_TCP.CRLF);
  utl_smtp.write_data(cn, 'Subject: ' || v_assunto_email);
  --    utl_smtp.write_data(c, 'Subject: Relatório mensal ');
  utl_smtp.write_raw_data(cn,
                          UTL_RAW.CAST_TO_RAW(UTL_TCP.CRLF || ' ' ||
                                              UTL_TCP.CRLF)); -- linha obrigatória
  --    utl_smtp.write_data(cn, v_mensagem_email); -- conteúdo
  utl_smtp.write_raw_data(cn,
                          UTL_RAW.CAST_TO_RAW(UTL_TCP.CRLF ||
                                              v_mensagem_email ||
                                              UTL_TCP.CRLF)); -- conteúdo
  utl_smtp.close_data(cn);
  utl_smtp.quit(cn);



end p_dplan_identif_inconsistencia;
